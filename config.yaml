# config.yaml for MXBMRP

# Defines the content of the displayed text in the shader.
# Possible variables are {Bike}, {Track}, {Server} and {Password}.
content_tpl: |
  Bike:     {Bike}
  Track:    {Track}
  Server:   {Server}
  Password: {Password}

# Absolute path to the destination where the generated shader will be saved. Ensure this is pointing to the correct directory for ReShade shaders.
# Important: Use forward slashes (/) instead of backward slashes (\) in the path.
shader_path: "D:/SteamLibrary/steamapps/common/MX Bikes/reshade-shaders/Shaders/mxbmrp.fx"

# Absoluete path to the background image used for the visual layer in the shader.
# Important: Use forward slashes (/) instead of backward slashes (\) in the path.
layer_src: "C:/Users/Thomas/Desktop/mxbmrp/layer.png"

# Defines the maximum number of characters allowed for each line in the shader output.
max_len: 32

# The frequency (in seconds) that the memory reader will check for updates in memory.
update_interval: 10

# Set to True for detailed console output, useful for debugging.
verbose: True

# The name of the process the script will attach to. In this case, it's the executable file for MX Bikes, mxbikes.exe.
proc_name: mxbikes.exe

# This is a Jinja2 template that provides the structure for how the shader will be built.
shader_tpl: shader_tpl.jinja

# The memory addresses where game data is located. These addresses are pre-configured for MX Bikes beta19
mem_addrs:
  local_server_name:
    addr_offset: 0x9C6A28
    data_size: 64
  local_server_password:
    addr_offset: 0x9C6A6C
    data_size: 32
  bike_name:
    addr_offset: 0x57BB48
    data_size: 32
  track_name:
    addr_offset: 0x4F3FD8
    data_size: 64
  server_ip:
    addr_offset: 0x57B800
    data_size: 4
  server_port:
    addr_offset: 0x57B7EE
    data_size: 2
  server_password:
    addr_offset: 0x9AE0F4
    data_size: 32

# Search parameters for finding the server name in memory.
server_name:
  offset: 25
  data_size: 64